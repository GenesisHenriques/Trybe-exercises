{"ast":null,"code":"var _jsxFileName = \"/home/genesis/Trybe/Trybe-exercises/modulo-2/bloco_18_Context-API-React-hooks/dia_2-useState-useContext/assincrono/usestate-usecontext/src/context/ToDoProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ToDoContext from \"./ToDoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoProvider({\n  children\n}) {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addToDo = newTodo => {\n    setTodos(todos.concat(newTodo));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(ToDoContext.Provider, {\n      value: {\n        todos,\n        addToDo\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoProvider, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = ToDoProvider;\nexport default ToDoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoProvider\");","map":{"version":3,"sources":["/home/genesis/Trybe/Trybe-exercises/modulo-2/bloco_18_Context-API-React-hooks/dia_2-useState-useContext/assincrono/usestate-usecontext/src/context/ToDoProvider.js"],"names":["React","useState","ToDoContext","ToDoProvider","children","todos","setTodos","addToDo","newTodo","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,OAAD,IAAa;AAC3BF,IAAAA,QAAQ,CAACD,KAAK,CAACI,MAAN,CAAaD,OAAb,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAF;AAASE,QAAAA;AAAT,OAA7B;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAdQD,Y;;KAAAA,Y;AAgBT,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ToDoContext from \"./ToDoContext\";\n\nfunction ToDoProvider({ children }) {\n  const [todos, setTodos] = useState([]);\n\n  const addToDo = (newTodo) => {\n    setTodos(todos.concat(newTodo))\n  }\n\n  return (\n    <main>\n      <ToDoContext.Provider value={{ todos, addToDo }}>\n        {children}\n      </ToDoContext.Provider>\n    </main>\n  );\n}\n\nexport default ToDoProvider"]},"metadata":{},"sourceType":"module"}