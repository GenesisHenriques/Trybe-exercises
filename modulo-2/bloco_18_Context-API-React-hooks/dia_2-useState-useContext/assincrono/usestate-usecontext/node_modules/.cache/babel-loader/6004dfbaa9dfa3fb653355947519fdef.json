{"ast":null,"code":"var _jsxFileName = \"/home/genesis/Trybe/Trybe-exercises/modulo-2/bloco_18_Context-API-React-hooks/dia_2-useState-useContext/assincrono/usestate-usecontext/src/pages/Lista.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport ToDoContext from \"../context/ToDoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Lista() {\n  _s();\n\n  const {\n    todos\n  } = useContext();\n  return /*#__PURE__*/_jsxDEV(ToDoContext.Consumer, {\n    children: ({\n      todos\n    }) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Lista, \"6IiWjc/zA0NYVE1AcVdZNLaqNNM=\");\n\n_c = Lista;\nexport default Lista;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lista\");","map":{"version":3,"sources":["/home/genesis/Trybe/Trybe-exercises/modulo-2/bloco_18_Context-API-React-hooks/dia_2-useState-useContext/assincrono/usestate-usecontext/src/pages/Lista.js"],"names":["React","useContext","ToDoContext","Lista","todos","map","todo","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAYH,UAAU,EAA5B;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAA,cACG,CAAC;AAAEG,MAAAA;AAAF,KAAD,kBACC;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAA,kBAAiBD;AAAjB,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cAA3B;AADH;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAXQJ,K;;KAAAA,K;AAaT,eAAeA,KAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport ToDoContext from \"../context/ToDoContext\";\n\nfunction Lista() {\n  const { todos } = useContext()\n  return (\n    <ToDoContext.Consumer>\n      {({ todos }) => (\n        <ul>\n          {todos.map((todo, index) => <li key={index}>{todo}</li>)}\n        </ul>\n      )}\n    </ToDoContext.Consumer>\n  );\n}\n\nexport default Lista;"]},"metadata":{},"sourceType":"module"}